# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class Caempresa(models.Model):
    id = models.AutoField(db_column='ID', primary_key=True)  # Field name made lowercase.
    empresa = models.CharField(max_length=255, blank=True, null=True)
    razao_soc = models.CharField(max_length=255, blank=True, null=True)
    insc_estad = models.CharField(max_length=255, blank=True, null=True)
    insc_munic = models.CharField(db_column='Insc_munic', max_length=255, blank=True, null=True)  # Field name made lowercase.
    dt_abertura = models.DateTimeField(blank=True, null=True)
    ativo = models.CharField(max_length=255, blank=True, null=True)
    tipo = models.CharField(max_length=255, blank=True, null=True)
    email = models.CharField(max_length=255, blank=True, null=True)
    telefone = models.CharField(max_length=25, blank=True, null=True)
    cnpj = models.CharField(max_length=255, blank=True, null=True)
    tp_nf = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'CaEmpresa'


class AppCaaplicacao(models.Model):
    aplicacao = models.CharField(max_length=128)
    view = models.CharField(max_length=128)
    dt_cad = models.DateField()
    modulo = models.ForeignKey('AppCamodulo', models.DO_NOTHING)
    rotina = models.ForeignKey('AppCarotina', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_caaplicacao'


class AppCaempresa(models.Model):
    empresa = models.CharField(max_length=128)
    razao_soc = models.CharField(max_length=128)
    insc_estad = models.CharField(max_length=128)
    insc_munic = models.CharField(db_column='Insc_munic', max_length=128)  # Field name made lowercase.
    dt_abertura = models.DateTimeField()
    ativo = models.BooleanField()
    tipo = models.CharField(max_length=2)
    email = models.CharField(max_length=128)
    telefone = models.CharField(max_length=128)
    cnpj = models.CharField(max_length=128)
    tp_nf = models.CharField(max_length=128)

    class Meta:
        managed = False
        db_table = 'app_caempresa'


class AppCafiguras(models.Model):
    tít_periodico = models.CharField(max_length=250)
    tít_artigo = models.CharField(max_length=250)
    volume = models.CharField(max_length=50)
    numero = models.CharField(max_length=50)
    ano_public = models.CharField(max_length=25)
    autores = models.CharField(max_length=150)
    image = models.TextField()

    class Meta:
        managed = False
        db_table = 'app_cafiguras'


class AppCagroupo(models.Model):
    name = models.CharField(max_length=128)

    class Meta:
        managed = False
        db_table = 'app_cagroupo'


class AppCamembrogrupo(models.Model):
    dt_cad = models.DateField()
    invite_reason = models.CharField(max_length=64)
    group = models.ForeignKey(AppCagroupo, models.DO_NOTHING)
    user = models.ForeignKey('AppCauser', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_camembrogrupo'


class AppCamodulo(models.Model):
    modulo = models.CharField(max_length=128)

    class Meta:
        managed = False
        db_table = 'app_camodulo'


class AppCapedcar(models.Model):
    origem = models.CharField(max_length=250)
    lat_orig = models.IntegerField()
    log_orig = models.IntegerField()
    destino = models.CharField(max_length=250)
    lat_dest = models.IntegerField()
    log_dest = models.IntegerField()
    dt_pedcar = models.DateTimeField()
    qtd_pedcar = models.IntegerField()
    vl_calc = models.IntegerField()
    vl_neg = models.IntegerField()
    status = models.CharField(max_length=2)
    obs = models.CharField(max_length=250)
    user_cli = models.ForeignKey('AppCausuario', models.DO_NOTHING)
    user_mot = models.ForeignKey('AppCauser', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_capedcar'


class AppCarotina(models.Model):
    rotina = models.CharField(max_length=128)
    dt_cad = models.DateField()
    modulo = models.ForeignKey(AppCamodulo, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_carotina'


class AppCatpservico(models.Model):
    servico = models.CharField(max_length=128)

    class Meta:
        managed = False
        db_table = 'app_catpservico'


class AppCauser(models.Model):
    user = models.CharField(max_length=50)
    nome = models.CharField(max_length=50)
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    cpf = models.CharField(max_length=50)
    dt_nasc = models.DateTimeField()
    tipo = models.CharField(max_length=2)
    ativo = models.BooleanField()
    email = models.CharField(max_length=25)
    celular = models.CharField(max_length=50)
    senha = models.CharField(max_length=25)
    senha_conf = models.CharField(max_length=25)

    class Meta:
        managed = False
        db_table = 'app_causer'


class AppCausuario(models.Model):
    user = models.CharField(max_length=50)
    nome = models.CharField(max_length=50)
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    cpf = models.CharField(max_length=50)
    rg = models.CharField(max_length=25)
    dt_nasc = models.DateTimeField()
    nmae = models.CharField(max_length=25)
    npai = models.CharField(max_length=25)
    email = models.CharField(max_length=25)
    celular = models.CharField(max_length=5)
    endereco = models.CharField(max_length=50)
    endcompl = models.CharField(max_length=50)
    bairro = models.CharField(max_length=50)
    cep = models.CharField(max_length=25)
    cidade = models.CharField(max_length=25)
    uf = models.CharField(max_length=20)
    pais = models.CharField(max_length=3)
    tipo = models.CharField(max_length=2)
    dt_criacao = models.DateTimeField()
    ativo = models.BooleanField()
    senha = models.CharField(max_length=25)
    senha_conf = models.CharField(max_length=25)

    class Meta:
        managed = False
        db_table = 'app_causuario'


class AppCausucli(models.Model):
    foto = models.CharField(max_length=128)
    img_docto = models.CharField(max_length=128)
    antec_crim = models.BooleanField()
    img_comp_resid = models.CharField(max_length=128)
    user = models.ForeignKey(AppCauser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_causucli'


class AppCausumot(models.Model):
    foto = models.CharField(max_length=128)
    img_docto = models.CharField(max_length=128)
    antec_crim = models.BooleanField()
    img_hab_frente = models.CharField(max_length=128)
    img_hab_verso = models.CharField(max_length=128)
    dt_venc_hab = models.DateTimeField()
    img_comp_resid = models.CharField(max_length=128)
    img_crlv = models.CharField(max_length=128)
    img_carro = models.CharField(max_length=128)
    placa = models.CharField(max_length=128)
    marca = models.CharField(db_column='Marca', max_length=128)  # Field name made lowercase.
    user = models.ForeignKey(AppCauser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'app_causumot'


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)
    name = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.BooleanField()
    username = models.CharField(unique=True, max_length=150)
    last_name = models.CharField(max_length=150)
    email = models.CharField(max_length=254)
    is_staff = models.BooleanField()
    is_active = models.BooleanField()
    date_joined = models.DateTimeField()
    first_name = models.CharField(max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class DjangoAdminLog(models.Model):
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    action_time = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'
